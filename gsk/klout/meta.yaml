{% set name = "Klout" %}
{% set version = "0.1.3" %}
{% set hash_type = "sha256" %}
{% set hash_value = "6984f39327f2e154eaadc7b9f4588c6dcdf7431fb01b30ebe9360a1c424166ba" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.zip'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.zip
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  script: python setup.py install  --single-version-externally-managed --record=record.txt

requirements:
  build:
    - python
    - setuptools
  run:
    - python

test:
  imports:
    - klout
  requires:
    - nose
    - unittest2py3k #[py3k]

about:
  home: http://pypi.python.org/pypi/klout/
  license: MIT License
  license_family: MIT
  license_file: ''
  summary: Minimalist Klout API interface.
  description: "==================\r\nKlout API\r\n==================\r\n.. image:: https://secure.travis-ci.org/erfaan/klout.png?branch=master\r\n   :target: https://travis-ci.org/erfaan/klout\r\n\r\n\
    A minimalist klout API interface. Use of this API \r\nrequires klout *developer key*. You can get registered and\r\nget a key at\r\n\r\n    <http://klout.com/s/developers/v2>\r\n\r\nComplete documentation\
    \ is available at: \r\n\t\r\n\t<https://klout.readthedocs.org/en/latest/>\r\n\r\n==============================\r\nDesign Philosoph\r\n==============================\r\n\r\nSee `Design Philosophy <https://github.com/erfaan/klout/blob/master/docs/design-philosophy.rst>`_\r\
    \n\r\n====================\r\nQuickstart\r\n====================\r\nInstall the PyPi package::\r\n    \r\n    pip install Klout\r\n\r\nThis short example shows how to get a kloutId first and fetch user's\
    \ score using that kloutId::\r\n\r\n    from klout import *\r\n    \r\n    # Make the Klout object\r\n    k = Klout('YOUR_KEY_HERE')\r\n\r\n    # Get kloutId of the user by inputting a twitter screenName\r\
    \n    kloutId = k.identity.klout(screenName=\"erfaan\").get('id')\r\n\r\n    # Get klout score of the user\r\n    score = k.user.score(kloutId=kloutId).get('score')\r\n\r\n    print \"User's klout score\
    \ is: %s\" % (score) \r\n\r\n    # By default all communication is not secure (HTTP). An optional secure parameter\r\n    # can be sepcified for secure (HTTPS) communication\r\n    k = Klout('YOUR_KEY_HERE',\
    \ secure=True)\r\n\r\n    # Optionally a timeout parameter (seconds) can also be sent with all calls\r\n    score = k.user.score(kloutId=kloutId, timeout=5).get('score')\r\n\r\n==================\r\n\
    License\r\n==================\r\nMIT License. See LICENSE.txt\r\nCopyright (c) 2012 Irfan Ahmad"
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: ''
